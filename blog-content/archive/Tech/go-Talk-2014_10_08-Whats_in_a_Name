What's in a name?
By Andrew Gerrand of Google at Meetup Golang Paris on 2014-10-08

A good name is consistent (easy to guess), short (easy to type), accurate (easy to understand).

A rule of thumb
- A name should be longer when the distance between a name's declaration and its use is greater
- Mixed case, No underscores
- Acronyms should be all capitals
- Prefer i to index, r to reader
- Should be short if its type is descriptive e.g. Duration, not int64
- Something like for _, commit = ... is bad better use c instead of commit
- Return value should only be named for documentation purposes.
- Function receiver should be 1-2 characters
- Go has bytes.Buffer not bytes.byteBuffer so when you export function it should be short
- Interface containing one function often has -er suffix
- Error type should have FooError form, while error value should be ErrFoo
- Package name should be purposeful unlike util and common
- The last component of imported package should be the same as package name itself
